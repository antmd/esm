#ifndef DISMANTLE_FIX_H
#define DISMANTLE_FIX_H

#ifndef NDEBUG // DO NOT INCLUDE IN RELEASE BUILDS

#include <iostream>
#include <boost/tokenizer.hpp>
#include <iomanip>
#include <map>

static void initializeTagNames();
static void initializeTagDescription();

static std::map< std::string , std::string> fixTags;
static std::map< std::string , std::string> fixTagsDesc;

static void dismantleFIX( std::string direction, std::string fixMessage )
{
  if ( (int) fixTags.size() < 1)
  {
    initializeTagNames();
    initializeTagDescription();
  } 

  std::cout << std::endl << std::endl << fixMessage ;
  std::cout << std::endl
            <<  "*****************************  "
            << direction
            << "  ***********************************"
            << std::endl;

  std::cout << std::left << std::setw(5)  << "Tag"
            << std::left << std::setw(32) << "Field Name"
            << std::left << std::setw(25) << "Value"
            << "Description"
            << std::endl;

  char charSep[2]; 
  charSep[0] = (char) 1;
  charSep[1] = '\0';

  std::string temp, tag, value, tagVal;

  boost::char_separator<char> sep(charSep);
  boost::char_separator<char> sepEqual("=");

  typedef boost::tokenizer<boost::char_separator<char> > tokenizer;
  tokenizer tokens(fixMessage, sep);
  for ( tokenizer::iterator tok_iter = tokens.begin();
        tok_iter != tokens.end(); ++tok_iter)
  {

    temp.assign(*tok_iter) ;
    tokenizer tokens2( temp, sepEqual) ;
    tokenizer::iterator tok2 = tokens2.begin();

    try 
    {
      tag = *tok2;
      value = *(++tok2) ;
      tagVal = tag + "-" + value;
      std::cout << std::left << std::setw(5) << tag << std::flush;
      std::cout << std::left << std::setw(32) << fixTags.at(tag) << std::flush;
      std::cout << std::left << std::setw(25) << value << std::flush; 
      if ( fixTagsDesc.find(tagVal) != fixTagsDesc.end() )
        std::cout << fixTagsDesc.at(tagVal) << std::flush ; 
    }
    catch ( std::exception &e)
    {
      std::cout << "Exception occurred " << std::endl << e.what() << std::endl ;
    }
    std::cout << std::endl;
  }

  std::cout << std::endl
            <<  "*****************************  "
            << "END OF " << direction
            << "  *****************************"
            << std::endl;
}

static void initializeTagDescription()
{
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "4-B", "Buy") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "4-S", "Sell") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "4-X", "Cross") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "4-T", "Trade") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5-N", "New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5-C", "Cancel") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5-R", "Replace") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "13-1", "per share") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "13-2", "percentage") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "13-3", "absolute") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-1", "Not held") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-2", "Work") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-3", "Go along") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-4", "Over the day") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-5", "Held") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-6", "Participate don't initiate") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-7", "Strict scale") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-8", "Try to scale") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-9", "Stay on bidside") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-0", "Stay on offerside") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-A", "No cross (cross is forbidden)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-B", "OK to cross") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-C", "Call first") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-D", "Percent of volume '(indicates that the sender does not want to be all of the volume on the floor vs. a specific percentage)'") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-E", "Do not increase - DNI") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-F", "Do not reduce - DNR") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-G", "All or none - AON") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-I", "Institutions only") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-L", "Last peg (last sale)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-M", "Mid-price peg (midprice of inside quote)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-N", "Non-negotiable") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-O", "Opening peg") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-P", "Market peg") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-R", "Primary peg (primary market - buy at bid/sell at offer)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-S", "Suspend") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-T", "Fixed Peg to Local best bid or offer at time of order") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-U", "Customer Display Instruction (Rule11Ac1-1/4)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-V", "Netting (for Forex)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "18-W", "Peg to VWAP") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "20-0", "New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "20-1", "Cancel") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "20-2", "Correct") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "20-3", "Status") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "21-1", "Automated execution order, private, no Broker intervention") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "21-2", "Automated execution order, public, Broker intervention OK") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "21-3", "Manual order, best execution") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "22-1", "CUSIP") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "22-2", "SEDOL") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "22-3", "QUIK") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "22-4", "ISIN number") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "22-5", "RIC code") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "22-6", "ISO Currency <15> Code") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "22-7", "ISO Country <421> Code") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "22-8", "Exchange Symbol <55>") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "22-9", "Consolidated Tape Association (CTA) Symbol <55> (SIAC CTS/CQS line format)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "25-L", "Low") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "25-M", "Medium") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "25-H", "High") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "27-0", "1000000000") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "27-S", "Small") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "27-M", "Medium") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "27-L", "Large") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "28-N", "New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "28-C", "Cancel") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "28-R", "Replace") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "29-1", "Agent") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "29-2", "Cross as agent") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "29-3", "Cross as principal") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "29-4", "Principal") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-0", "Heartbeat") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-1", "Test Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-2", "Resend Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-3", "Reject") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-4", "Sequence Reset") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-5", "Logout") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-6", "Indication of Interest") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-7", "Advertisement") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-8", "Execution Report") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-9", "Order Cancel Reject") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-A", "Logon") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-B", "News") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-C", "Email") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-D", "Order - Single") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-E", "Order - List") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-F", "Order Cancel Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-G", "Order Cancel/Replace Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-H", "Order Status Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-J", "Allocation") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-K", "List Cancel Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-L", "List Execute") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-M", "List Status Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-N", "List Status") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-P", "Allocation ACK") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-Q", "Don't Know Trade") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-R", "Quote Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-S", "Quote") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-T", "Settlement Instructions") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-V", "Market Data Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-W", "Market Data-Snapshot/Full Refresh") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-X", "Market Data-Incremental Refresh") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-Y", "Market Data Request Reject") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-Z", "Quote Cancel") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-a", "Quote Status Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-b", "Quote Acknowledgement") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-c", "Security Definition Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-d", "Security Definition") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-e", "Security Status Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-f", "Security Status") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-g", "Trading Session Status Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-h", "Trading Session Status") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-i", "Mass Quote") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-j", "Business Message Reject") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-k", "Bid Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-l", "Bid Response") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "35-m", "List Strike Price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-0", "New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-1", "Partially filled") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-2", "Filled") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-3", "Done for day") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-4", "Canceled") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-5", "Replaced") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-6", "Pending Cancel") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-7", "Stopped") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-8", "Rejected") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-9", "Suspended") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-A", "Pending New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-B", "Calculated") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-C", "Expired") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-D", "Accepted for bidding") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "39-E", "Pending Replace") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-1", "Market") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-2", "Limit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-3", "Stop") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-4", "Stop limit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-5", "Market on close") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-6", "With or without") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-7", "Limit or better") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-8", "Limit with or without") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-9", "On basis") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-A", "On close") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-B", "Limit on close") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-C", "Forex - Market") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-D", "Previously quoted") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-E", "Previously indicated") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-F", "Forex - Limit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-G", "Forex - Swap") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-H", "Forex - Previously Quoted") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-I", "Funari (Limit Day Order with unexecuted portion handled as Market On Close. e.g. Japan)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "40-P", "Pegged") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "43-Y", "Possible duplicate") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "43-N", "Original transmission") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-A", "Agency single order") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-B", "Short exempt transaction (refer to A type)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-C", "Program Order, non-index arb, for Member firm/org") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-D", "Program Order, index arb, for Member firm/org") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-E", "Registered Equity Market Maker trades") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-F", "Short exempt transaction (refer to W type)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-H", "Short exempt transaction (refer to I type)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-I", "Individual Investor, single order") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-J", "Program Order, index arb, for individual customer") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-K", "Program Order, non-index arb, for individual customer") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-L", "Short exempt transaction for member competing market-maker affiliated with the firm clearing the trade (refer to P and") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-M", "Program Order, index arb, for other member") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-N", "Program Order, non-index arb, for other member") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-O", "Competing dealer trades") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-P", "Principal") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-R", "Competing dealer trades") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-S", "Specialist trades") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-T", "Competing dealer trades") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-U", "Program Order, index arb, for other agency") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-W", "All other orders as agent for other member") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-X", "Short exempt transaction for member competing market-maker not affiliated with the firm clearing the trade (refer to W") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-Y", "Program Order, non-index arb, for other agency") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "47-Z", "Short exempt transaction for non-member competing market-maker (refer to A and R types)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "54-1", "Buy") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "54-2", "Sell") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "54-3", "Buy minus") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "54-4", "Sell plus") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "54-5", "Sell short") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "54-6", "Sell short exempt") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "54-7", "Undisclosed (valid for IOI and List Order messages only)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "54-8", "Cross (orders where counterparty is an exchange, valid for all messages except IOIs)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "54-9", "Cross short") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "59-0", "Day") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "59-1", "Good Till Cancel (GTC)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "59-2", "At the Opening (OPG)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "59-3", "Immediate or Cancel (IOC)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "59-4", "Fill or Kill (FOK)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "59-5", "Good Till Crossing (GTX)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "59-6", "Good Till Date") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "61-0", "Normal") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "61-1", "Flash") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "61-2", "Background") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "63-0", "Regular") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "63-1", "Cash") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "63-2", "Next Day") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "63-3", "T+2") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "63-4", "T+3") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "63-5", "T+4") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "63-6", "Future") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "63-7", "When Issued") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "63-8", "Sellers Option") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "63-9", "T+ 5") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "71-0", "New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "71-1", "Replace") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "71-2", "Cancel") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "71-3", "Preliminary (without MiscFees and NetMoney)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "71-4", "Calculated (includes MiscFees and NetMoney)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "71-5", "Calculated without Preliminary (sent unsolicited by broker, includes MiscFees and NetMoney)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "81-0", "regular") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "81-1", "soft dollar") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "81-2", "step-in") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "81-3", "step-out") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "81-4", "soft-dollar step-in") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "81-5", "soft-dollar step-out") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "81-6", "plan sponsor") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "87-0", "accepted (successfully processed)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "87-1", "rejected") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "87-2", "partial accept") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "87-3", "received (received, not yet processed)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "88-0", "unknown account(s)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "88-1", "incorrect quantity") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "88-2", "incorrect average price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "88-3", "unknown executing broker mnemonic") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "88-4", "commission difference") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "88-5", "unknown OrderID") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "88-6", "unknown ListID") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "88-7", "other") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "94-0", "New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "94-1", "Reply") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "94-2", "Admin Reply") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "98-0", "None / other") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "98-1", "PKCS (proprietary)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "98-2", "DES (ECB mode)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "98-3", "PKCS/DES (proprietary)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "98-4", "PGP/DES (defunct)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "98-5", "PGP/DES-MD5 (see app note on FIX web site)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "98-6", "PEM/DES-MD5 (see app note on FIX web site)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "102-0", "Too late to cancel") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "102-1", "Unknown order") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "102-2", "Broker Option") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "102-3", "Order already in Pending Cancel or Pending Replace status") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "103-0", "Broker option") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "103-1", "Unknown symbol") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "103-2", "Exchange closed") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "103-3", "Order exceeds limit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "103-4", "Too late to enter") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "103-5", "Unknown Order") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "103-6", "Duplicate Order (e.g. dupe ClOrdID )") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "103-7", "Duplicate of a verbally communicated order") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "103-8", "Stale Order") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-A", "All or none") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-C", "At the close") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-I", "In touch with") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-L", "Limit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-M", "More behind") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-O", "At the open") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-P", "Taking a position") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-Q", "At the Market (previously called Current Quote)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-R", "Ready to trade") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-S", "Portfolio show-n") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-T", "Through the day") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-V", "Versus") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-W", "Indication - Working away") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-X", "Crossing opportunity") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-Y", "At the Midpoint") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "104-Z", "Pre-open") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "113-Y", "Indicates that party receiving message must report trade") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "113-N", "Indicates that party sending message will report trade") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "114-Y", "Indicates the broker is responsible for locating the stock") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "114-N", "Indicates the broker is not required to locate") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "121-Y", "Execute Forex after security trade") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "121-N", "Do not execute Forex after security trade") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "123-Y", "Gap Fill message, MsgSeqNum") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "123-N", "Sequence Reset") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "127-A", "Unknown symbol") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "127-B", "Wrong side") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "127-C", "Quantity exceeds order") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "127-D", "No matching order") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "127-E", "Price exceeds limit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "127-Z", "Other") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "130-Y", "Natural") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "130-N", "Not natural") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "139-1", "Regulatory (e.g. SEC)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "139-2", "Tax") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "139-3", "Local Commission") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "139-4", "Exchange Fees") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "139-5", "Stamp") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "139-6", "Levy") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "139-7", "Other") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "139-8", "Markup") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "139-9", "Consumption Tax") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "141-Y", "Yes, reset sequence numbers") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "141-N", "No") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-0", "New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-1", "Partial fill") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-2", "Fill") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-3", "Done for day") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-4", "Canceled") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-5", "Replace") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-6", "Pending Cancel") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-7", "Stopped") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-8", "Rejected") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-9", "Suspended") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-A", "Pending New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-B", "Calculated") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-C", "Expired") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-D", "Restated") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-E", "Pending Replace") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "150-T", "Triggered") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "160-0", "Default") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "160-1", "Standing Instructions Provided") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "160-2", "Specific Allocation") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "160-3", "Specific Allocation") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "163-N", "New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "163-C", "Cancel") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "163-R", "Replace") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "165-1", "Broker's Instructions") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "165-2", "Institution's Instructions") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "166-CED", "CEDEL") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "166-DTC", "Depository Trust Company") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "166-EUR", "Euroclear") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "166-FED", "Federal Book Entry") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "166-PNY", "Physical") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "166-PTC", "Participant Trust Company") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-BA", "Bankers Acceptance") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-CB", "Convertible Bond (Note not part of ISITC spec)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-CD", "Certificate Of Deposit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-CMO", "Collateralize Mortgage Obligation") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-CORP", "Corporate Bond") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-CP", "Commercial Paper") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-CPP", "Corporate Private Placement") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-CS", "Common Stock") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-FHA", "Federal Housing Authority") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-FHL", "Federal Home Loan") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-FN", "Federal National Mortgage Association") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-FOR", "Foreign Exchange Contract") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-FUT", "Future") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-GN", "Government National Mortgage Association") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-GOVT", "Treasuries + Agency Debenture") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-IET", "Mortgage IOETTE") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-MF", "Mutual Fund") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-MIO", "Mortgage Interest Only") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-MPO", "Mortgage Principal Only") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-MPP", "Mortgage Private Placement") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-MPT", "Miscellaneous Pass-Thru") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-MUNI", "Municipal Bond") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-NONE", "No ISITC Security Type") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-OPT", "Option") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-PS", "Preferred Stock") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-RP", "Repurchase Agreement") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-RVRP", "Reverse Repurchase Agreement") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-SL", "Student Loan Marketing Association") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-TD", "Time Deposit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-USTB", "US Treasury Bill") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-WAR", "Warrant") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-ZOO", "Cats, Tigers &amp; Lions (a real code: US Treasury Receipts)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "167-?", "'Wildcard' entry") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "169-0", "Other") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "169-1", "DTC SID") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "169-2", "Thomson ALERT") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "169-3", "A Global Custodian") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "197-0", "F/X Netting") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "197-1", "F/X Swap") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "201-0", "Put") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "201-1", "Call") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "203-0", "Covered") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "203-1", "Uncovered") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "204-0", "Customer") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "204-1", "Firm") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "206-L", "Long (a.k.a. 'American')") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "206-S", "Short (a.k.a. 'European')") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "208-Y", "Details should be communicated") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "208-N", "Details should not be communicated") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "209-1", "Match") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "209-2", "Forward") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "209-3", "Forward and Match") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "216-1", "Target Firm") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "216-2", "Target List") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "216-3", "Block Firm") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "216-4", "Block List") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "219-1", "CURVE") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "219-2", "5-YR") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "219-3", "OLD-5") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "219-4", "10-YR") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "219-5", "OLD-10") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "219-6", "30-YR") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "219-7", "OLD-30") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "219-8", "3-MO-LIBOR") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "219-9", "6-MO-LIBOR") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "263-0", "Snapshot") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "263-1", "Snapshot + Updates (Subscribe)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "263-2", "Disable previous Snapshot + Update Request (Unsubscribe)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "264-0", "Full Book") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "264-1", "Top of Book") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "265-0", "Full Refresh") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "265-1", "Incremental Refresh") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "266-Y", "one book entry per side per price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "266-N", "Multiple entries per side per price allowed") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "269-0", "Bid") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "269-1", "Offer") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "269-2", "Trade") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "269-3", "Index Value") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "269-4", "Opening Price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "269-5", "Closing Price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "269-6", "Settlement Price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "269-7", "Trading Session High Price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "269-8", "Trading Session Low Price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "269-9", "Trading Session VWAP Price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "274-0", "Plus Tick") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "274-1", "Zero-Plus Tick") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "274-2", "Minus Tick") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "274-3", "Zero-Minus Tick") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "276-A", "Open / Active") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "276-B", "Closed / Inactive") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "276-C", "Exchange Best") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "276-D", "Consolidated Best") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "276-E", "Locked") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "276-F", "Crossed") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "276-G", "Depth") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "276-H", "Fast Trading") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "276-I", "Non-Firm") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-A", "Cash (only) Market") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-B", "Average Price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-C", "Cash Trade (same day clearing)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-D", "Next Day (only) Market") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-E", "Opening / Reopening Trade Detail") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-F", "Intraday Trade Detail") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-G", "Rule 127 Trade (NYSE)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-H", "Rule 155 Trade (Amex)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-I", "Sold Last (late reporting)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-J", "Next Day Trade (next day clearing)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-K", "Opened (late report of opened trade)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-L", "Seller") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-M", "Sold (out of sequence)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "277-N", "Stopped Stock (guarantee of price but does not execute the order)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "279-0", "New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "279-1", "Change") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "279-2", "Delete") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "281-0", "Unknown symbol") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "281-1", "Duplicate MDReqID") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "281-2", "Insufficient Bandwidth") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "281-3", "Insufficient Permissions") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "281-4", "Unsupported SubscriptionRequestType") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "281-5", "Unsupported MarketDepth") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "281-6", "Unsupported MDUpdateType") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "281-7", "Unsupported AggregatedBook") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "281-8", "Unsupported <a href") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "285-0", "Cancelation / Trade Bust") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "285-1", "Error") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "286-0", "Daily Open / Close / Settlement price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "286-1", "Session Open / Close / Settlement price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "286-2", "Delivery Settlement price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "291-1", "Bankrupt") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "292-A", "Ex-Dividend") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "292-B", "Ex-Distribution") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "292-C", "Ex-Rights") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "292-D", "New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "292-E", "Ex-Interest") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "297-0", "Accepted") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "297-1", "Canceled for Symbol") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "297-2", "Canceled for Security Type(s)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "297-3", "Canceled for Underlying") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "297-4", "Canceled All") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "297-5", "Rejected") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "303-1", "Manual") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "303-2", "Automatic") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "321-0", "Request Security identity and specifications") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "321-1", "Request Security identity for the specifications provided (Name of the security is not supplied)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "321-2", "Request List Security Types") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "321-3", "Request List Securities") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "323-1", "Accept security proposal as is") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "323-2", "Accept security proposal with revisions as indicated in the message") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "323-3", "List of security types returned per request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "323-4", "List of securities returned per request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "323-5", "Reject Security proposal") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "323-6", "Can not match selection criteria") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "325-Y", "Message is being sent unsolicited") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "325-N", "Message is being sent as a result of a prior request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-1", "Opening Delay") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-2", "Trading Halt") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-3", "Resume") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-4", "No Open/No Resume") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-5", "Price Indication") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-6", "Trading Range Indication") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-7", "Market Imbalance Buy") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-8", "Market Imbalance Sell") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-9", "Market On Close Imbalance Buy") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-10", "Market On Close Imbalance Sell") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-11", "(not assigned)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-12", "No Market Imbalance") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-13", "No Market On Close Imbalance") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-14", "ITS Pre-Opening") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-15", "New Price Indication") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-16", "Trade Dissemination Time") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-17", "Ready to trade (start of session)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-18", "Not Available for trading (end of session)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-19", "Not Traded on this Market") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "326-20", "Unknown or Invalid") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "327-I", "Order Imbalance") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "327-X", "Equipment Changeover") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "327-P", "News Pending") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "327-D", "News Dissemination") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "327-E", "Order Influx") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "327-M", "Additional Information") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "328-Y", "Halt was due to common stock being halted") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "328-N", "Halt was not related to a halt of the common stock") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "329-Y", "Halt was due to related security being halted") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "329-N", "Halt was not related to a halt of the related security") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "334-1", "Cancel") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "334-2", "Error") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "334-3", "Correction") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "338-1", "Electronic") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "338-2", "Open Outcry") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "338-3", "Two Party") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "339-1", "Testing") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "339-2", "Simulated") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "339-3", "Production") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "340-1", "Halted") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "340-2", "Open") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "340-3", "Closed") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "340-4", "Pre-Open") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "340-5", "Pre-Close") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "347-ISO-2022-JP", "for using JIS") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "347-EUC-JP", "for using EUC") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "347-Shift_JIS", "for using SJIS") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "347-UTF-8", "for using Unicode") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "368-1", "Unknown symbol (Security)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "368-2", "Exchange(Security) closed") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "368-3", "Quote exceeds limit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "368-4", "Too late to enter") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "368-5", "Unknown Quote") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "368-6", "Duplicate Quote") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "368-7", "Invalid bid/ask spread") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "368-8", "Invalid price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "368-9", "Not authorized to quote security") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-0", "Invalid tag number") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-1", "Required tag missing") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-2", "Tag not defined for this message type") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-3", "Undefined Tag") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-4", "Tag specified without a value") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-5", "Value is incorrect (out of range) for this tag") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-6", "Incorrect data format for value") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-7", "Decryption problem") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-8", "Signature problem") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-9", "CompID problem") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-10", "SendingTime accuracy problem") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "373-11", "Invalid MsgType") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "374-N", "New") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "374-C", "Cancel") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "377-Y", "Was solcitied") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "377-N", "Was not solicited") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "378-0", "GT Corporate action") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "378-1", "GT renewal / restatement (no corporate action)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "378-2", "Verbal change") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "378-3", "Repricing of order") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "378-4", "Broker option") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "378-5", "Partial decline of OrderQty (e.g. exchange-initiated partial cancel)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "380-0", "Other") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "380-1", "Unkown ID") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "380-2", "Unknown Security") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "380-3", "Unsupported Message Type") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "380-4", "Application not available") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "380-5", "Conditionally Required Field Missing") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "385-S", "Send") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "385-R", "Receive") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "388-0", "Related to displayed price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "388-1", "Related to market price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "388-2", "Related to primary price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "388-3", "Related to local primary price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "388-4", "Related to midpoint price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "388-5", "Related to last trade price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "394-1", "Non Disclosed' Style (e.g. US/European)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "394-2", "Disclosed' Style (e.g. Japanese)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "394-3", "No Bidding Process") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "399-1", "Sector") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "399-2", "Country") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "399-3", "Index") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "401-1", "SideValues") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "401-2", "SideValue 2") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "409-1", "5day moving average") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "409-2", "20 day moving average") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "409-3", "Normal Market Size") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "409-4", "Other") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "411-Y", "1") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "411-N", "0") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "414-1", "BuySide explicitly requests status using StatusRequest (Default) The sell-side firm can however, send a DONE status List Status Response in an unsolicited fashion") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "414-2", "SellSide periodically sends status using ListStatus. Period optionally specified in ProgressPeriod") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "414-3", "Real-time execution reports (to be discouraged)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "416-1", "Net") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "416-2", "Gross") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "418-R", "Risk Trade") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "418-G", "VWAP Guarantee") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "418-A", "Agency") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "418-J", "Guaranteed Close") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-2", "Closing Price at morning session") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-3", "Closing Price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-4", "Current price") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-5", "SQ") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-6", "VWAP through a day") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-7", "VWAP through a morning session") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-8", "VWAP through an afternoon session") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-9", "VWAP through a day except YORI") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-A", "VWAP through a morning session except YORI") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-B", "VWAP through an afternoon session except YORI") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-C", "Strike") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-D", "Open") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "419-Z", "Others") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "423-1", "Percentage") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "423-2", "per share (e.g. cents per share)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "423-3", "Fixed Amount (absolute value)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "427-0", "book out all trades on day of execution") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "427-1", "accumulate executions until order is filled or expires") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "427-2", "accumulate until verbally notified otherwise") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "429-1", "Ack") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "429-2", "Response") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "429-3", "Timed") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "429-4", "ExecStarted") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "429-5", "AllDone") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "429-6", "Alert") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "430-1", "Net") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "430-2", "Gross") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "431-1", "InBiddingProcess") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "431-2", "ReceivedForExecution") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "431-3", "Executing") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "431-4", "Canceling") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "431-5", "Alert") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "431-6", "All Done") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "431-7", "Reject") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "433-1", "Immediate") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "433-2", "Wait for Execute Instruction (e.g. a List Execute message or phone call before proceeding with execution of the list)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "434-1", "Order Cancel Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "434-2", "Order Cancel/Replace Request") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-1", "Market") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-2", "Limit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-3", "Stop") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-4", "Stop limit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-5", "Market on close") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-6", "With or without") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-7", "Limit or better") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-8", "Limit with or without") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-9", "On basis") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-A", "On close") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-B", "Limit on close") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-C", "Forex - Market") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-D", "Previously quoted") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-E", "Previously indicated") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-F", "Forex - Limit") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-G", "Forex - Swap") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-H", "Forex - Previously Quoted") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-I", "Funari (Limit Day Order with unexecuted portion handled as Market On Close. e.g. Japan)") ) ;
  fixTagsDesc.insert ( std::pair< std::string, std::string>( "5024-P", "Pegged") ) ;

}

static void initializeTagNames()
{
  fixTags.insert ( std::pair< std::string, std::string>( "1", "Account") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "2", "AdvId") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "3", "AdvRefID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "4", "AdvSide") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5", "AdvTransType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "6", "AvgPx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "7", "BeginSeqNo") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "8", "BeginString") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "9", "BodyLength") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "10", "CheckSum") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "11", "ClOrdID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "12", "Commission") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "13", "CommType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "14", "CumQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "15", "Currency") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16", "EndSeqNo") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "17", "ExecID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "18", "ExecInst") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "19", "ExecRefID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "20", "ExecTransType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "21", "HandlInst") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "22", "IDSource") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "23", "IOIid") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "24", "IOIOthSvc") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "25", "IOIQltyInd") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "26", "IOIRefID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "27", "IOIShares") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "28", "IOITransType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "29", "LastCapacity") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "30", "LastMkt") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "31", "LastPx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "32", "LastShares") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "33", "LinesOfText") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "34", "MsgSeqNum") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "35", "MsgType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "36", "NewSeqNo") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "37", "OrderID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "38", "OrderQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "39", "OrdStatus") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "40", "OrdType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "41", "OrigClOrdID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "42", "OrigTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "43", "PossDupFlag") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "44", "Price") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "45", "RefSeqNum") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "46", "RelatdSym") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "47", "Rule80A") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "48", "SecurityID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "49", "SenderCompID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "50", "SenderSubID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "51", "SendingDate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "52", "SendingTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "53", "Shares") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "54", "Side") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "55", "Symbol") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "56", "TargetCompID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "57", "TargetSubID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "58", "Text") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "59", "TimeInForce") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "60", "TransactTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "61", "Urgency") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "62", "ValidUntilTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "63", "SettlmntTyp") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "64", "FutSettDate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "65", "SymbolSfx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "66", "ListID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "67", "ListSeqNo") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "68", "TotNoOrders") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "69", "ListExecInst") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "70", "AllocID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "71", "AllocTransType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "72", "RefAllocID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "73", "NoOrders") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "74", "AvgPrxPrecision") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "75", "TradeDate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "76", "ExecBroker") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "77", "OpenClose") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "78", "NoAllocs") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "79", "AllocAccount") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "80", "AllocShares") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "81", "ProcessCode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "82", "NoRpts") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "83", "RptSeq") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "84", "CxlQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "85", "NoDlvyInst") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "86", "DlvyInst") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "87", "AllocStatus") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "88", "AllocRejCode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "89", "Signature") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "90", "SecureDataLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "91", "SecureData") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "92", "BrokerOfCredit") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "93", "SignatureLength") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "94", "EmailType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "95", "RawDataLength") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "96", "RawData") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "97", "PossResend") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "98", "EncryptMethod") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "99", "StopPx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "100", "ExDestination") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "102", "CxlRejReason") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "103", "OrdRejReason") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "104", "IOIQualifier") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "105", "WaveNo") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "106", "Issuer") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "107", "SecurityDesc") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "108", "HeartBtInt") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "109", "ClientID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "110", "MinQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "111", "MaxFloor") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "112", "TestReqID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "113", "ReportToExch") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "114", "LocateReqd") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "115", "OnBehalfOfCompID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "116", "OnBehalfOfSubID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "117", "QuoteID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "118", "NetMoney") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "119", "SettlCurrAmt") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "120", "SettlCurrency") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "121", "ForexReq") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "122", "OrigSendingTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "123", "GapFillFlag") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "124", "NoExecs") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "125", "CxlType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "126", "ExpireTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "127", "DKReason") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "128", "DeliverToCompID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "129", "DeliverToSubID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "130", "IOINaturalFlag") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "131", "QuoteReqID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "132", "BidPx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "133", "OfferPx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "134", "BidSize") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "135", "OfferSize") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "136", "NoMiscFees") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "137", "MiscFeeAmt") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "138", "MiscFeeCurr") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "139", "MiscFeeType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "140", "PrevClosePx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "141", "ResetSeqNumFlag") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "142", "SenderLocationID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "143", "TargetLocationID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "144", "OnBehalfOfLocationID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "145", "DeliverToLocationID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "146", "NoRelatedSym") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "147", "Subject") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "148", "Headline") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "149", "URLLink") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "150", "ExecType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "151", "LeavesQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "152", "CashOrderQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "153", "AllocAvgPx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "154", "AllocNetMoney") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "155", "SettlCurrFxRate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "156", "SettlCurrFxRateCalc") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "157", "NumDaysInterest") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "158", "AccruedInterestRate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "159", "AccruedInterestAmt") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "160", "SettlInstMode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "161", "AllocText") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "162", "SettlInstID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "163", "SettlInstTransType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "164", "EmailThreadID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "165", "SettlInstSource") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "166", "SettlLocation") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "167", "SecurityType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "168", "EffectiveTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "169", "StandInstDbType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "170", "StandInstDbName") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "171", "StandInstDbID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "172", "SettlDeliveryType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "173", "SettlDepositoryCode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "174", "SettlBrkrCode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "175", "SettlInstCode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "176", "SecuritySettlAgentName") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "177", "SecuritySettlAgentCode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "178", "SecuritySettlAgentAcctNum") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "179", "SecuritySettlAgentAcctName") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "180", "SecuritySettlAgentContactName") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "181", "SecuritySettlAgentContactPhone") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "182", "CashSettlAgentName") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "183", "CashSettlAgentCode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "184", "CashSettlAgentAcctNum") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "185", "CashSettlAgentAcctName") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "186", "CashSettlAgentContactName") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "187", "CashSettlAgentContactPhone") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "188", "BidSpotRate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "189", "BidForwardPoints") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "190", "OfferSpotRate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "191", "OfferForwardPoints") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "192", "OrderQty2") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "193", "FutSettDate2") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "194", "LastSpotRate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "195", "LastForwardPoints") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "196", "AllocLinkID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "197", "AllocLinkType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "198", "SecondaryOrderID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "199", "NoIOIQualifiers") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "200", "MaturityMonthYear") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "201", "PutOrCall") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "202", "StrikePrice") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "203", "CoveredOrUncovered") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "204", "CustomerOrFirm") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "205", "MaturityDay") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "206", "OptAttribute") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "207", "SecurityExchange") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "208", "NotifyBrokerOfCredit") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "209", "AllocHandlInst") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "210", "MaxShow") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "211", "PegDifference") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "212", "XmlDataLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "213", "XmlData") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "214", "SettlInstRefID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "215", "NoRoutingIDs") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "216", "RoutingType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "217", "RoutingID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "218", "SpreadToBenchmark") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "219", "Benchmark") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "223", "CouponRate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "228", "Factor") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "231", "ContractMultiplier") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "262", "MDReqID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "263", "SubscriptionRequestType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "264", "MarketDepth") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "265", "MDUpdateType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "266", "AggregatedBook") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "267", "NoMDEntryTypes") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "268", "NoMDEntries") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "269", "MDEntryType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "270", "MDEntryPx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "271", "MDEntrySize") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "272", "MDEntryDate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "273", "MDEntryTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "274", "TickDirection") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "275", "MDMkt") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "276", "QuoteCondition") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "277", "TradeCondition") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "278", "MDEntryID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "279", "MDUpdateAction") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "280", "MDEntryRefID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "281", "MDReqRejReason") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "282", "MDEntryOriginator") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "283", "LocationID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "284", "DeskID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "285", "DeleteReason") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "286", "OpenCloseSettleFlag") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "287", "SellerDays") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "288", "MDEntryBuyer") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "289", "MDEntrySeller") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "290", "MDEntryPositionNo") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "291", "FinancialStatus") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "292", "CorporateAction") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "293", "DefBidSize") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "294", "DefOfferSize") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "295", "NoQuoteEntries") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "296", "NoQuoteSets") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "297", "QuoteAckStatus") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "298", "QuoteCancelType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "299", "QuoteEntryID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "300", "QuoteRejectReason") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "301", "QuoteResponseLevel") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "302", "QuoteSetID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "303", "QuoteRequestType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "304", "TotQuoteEntries") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "305", "UnderlyingIDSource") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "306", "UnderlyingIssuer") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "307", "UnderlyingSecurityDesc") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "308", "UnderlyingSecurityExchange") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "309", "UnderlyingSecurityID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "310", "UnderlyingSecurityType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "311", "UnderlyingSymbol") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "312", "UnderlyingSymbolSfx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "313", "UnderlyingMaturityMonthYear") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "314", "UnderlyingMaturityDay") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "315", "UnderlyingPutOrCall") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "316", "UnderlyingStrikePrice") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "317", "UnderlyingOptAttribute") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "318", "UnderlyingCurrency") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "319", "RatioQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "320", "SecurityReqID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "321", "SecurityRequestType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "322", "SecurityResponseID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "323", "SecurityResponseType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "324", "SecurityStatusReqID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "325", "UnsolicitedIndicator") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "326", "SecurityTradingStatus") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "327", "HaltReason") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "328", "InViewOfCommon") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "329", "DueToRelated") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "330", "BuyVolume") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "331", "SellVolume") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "332", "HighPx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "333", "LowPx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "334", "Adjustment") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "335", "TradSesReqID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "336", "TradingSessionID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "337", "ContraTrader") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "338", "TradSesMethod") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "339", "TradSesMode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "340", "TradSesStatus") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "341", "TradSesStartTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "342", "TradSesOpenTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "343", "TradSesPreCloseTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "344", "TradSesCloseTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "345", "TradSesEndTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "346", "NumberOfOrders") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "347", "MessageEncoding") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "348", "EncodedIssuerLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "349", "EncodedIssuer") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "350", "EncodedSecurityDescLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "351", "EncodedSecurityDesc") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "352", "EncodedListExecInstLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "353", "EncodedListExecInst") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "354", "EncodedTextLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "355", "EncodedText") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "356", "EncodedSubjectLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "357", "EncodedSubject") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "358", "EncodedHeadlineLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "359", "EncodedHeadline") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "360", "EncodedAllocTextLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "361", "EncodedAllocText") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "362", "EncodedUnderlyingIssuerLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "363", "EncodedUnderlyingIssuer") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "364", "EncodedUnderlyingSecurityDescLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "365", "EncodedUnderlyingSecurityDesc") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "366", "AllocPrice") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "367", "QuoteSetValidUntilTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "368", "QuoteEntryRejectReason") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "369", "LastMsgSeqNumProcessed") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "370", "OnBehalfOfSendingTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "371", "RefTagID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "372", "RefMsgType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "373", "SessionRejectReason") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "374", "BidRequestTransType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "375", "ContraBroker") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "376", "ComplianceID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "377", "SolicitedFlag") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "378", "ExecRestatementReason") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "379", "BusinessRejectRefID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "380", "BusinessRejectReason") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "381", "GrossTradeAmt") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "382", "NoContraBrokers") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "383", "MaxMessageSize") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "384", "NoMsgTypes") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "385", "MsgDirection") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "386", "NoTradingSessions") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "387", "TotalVolumeTraded") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "388", "DiscretionInst") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "389", "DiscretionOffset") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "390", "BidID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "391", "ClientBidID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "392", "ListName") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "393", "TotalNumSecurities") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "394", "BidType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "395", "NumTickets") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "396", "SideValue1") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "397", "SideValue2") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "398", "NoBidDescriptors") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "399", "BidDescriptorType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "400", "BidDescriptor") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "401", "SideValueInd") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "402", "LiquidityPctLow") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "403", "LiquidityPctHigh") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "404", "LiquidityValue") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "405", "EFPTrackingError") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "406", "FairValue") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "407", "OutsideIndexPct") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "408", "ValueOfFutures") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "409", "LiquidityIndType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "410", "WtAverageLiquidity") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "411", "ExchangeForPhysical") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "412", "OutMainCntryUIndex") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "413", "CrossPercent") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "414", "ProgRptReqs") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "415", "ProgPeriodInterval") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "416", "IncTaxInd") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "417", "NumBidders") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "418", "TradeType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "419", "BasisPxType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "420", "NoBidComponents") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "421", "Country") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "422", "TotNoStrikes") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "423", "PriceType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "424", "DayOrderQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "425", "DayCumQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "426", "DayAvgPx") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "427", "GTBookingInst") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "428", "NoStrikes") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "429", "ListStatusType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "430", "NetGrossInd") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "431", "ListOrderStatus") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "432", "ExpireDate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "433", "ListExecInstType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "434", "CxlRejResponseTo") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "435", "UnderlyingCouponRate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "436", "UnderlyingContractMultiplier") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "437", "ContraTradeQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "438", "ContraTradeTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "439", "ClearingFirm") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "440", "ClearingAccount") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "441", "LiquidityNumSecurities") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "442", "MultiLegReportingType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "443", "StrikeTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "444", "ListStatusText") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "445", "EncodedListStatusTextLen") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "446", "EncodedListStatusText") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5001", "AlgorithmType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5002", "ParentOrderId") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5003", "UserId") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5004", "DeltaQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5005", "DerivativeSymbolType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5006", "ID6A7A") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5007", "TradeId") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5008", "TransactionCode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5010", "SettGroup") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5011", "ISINCode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5012", "PhysicalQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5013", "DmatNSDLQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5014", "DmatCDSQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5015", "TypeOfDeal") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5016", "SettlementNo") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5017", "DayFlag") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5018", "ReplyCode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5019", "ExerciseQty") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5020", "ScripCode") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5021", "ExchCreateTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5022", "ExchModifyTime") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5023", "ProductType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5024", "OriginalOrderType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5025", "SquareOff") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "5027", "SeqNum") ) ;

  fixTags.insert ( std::pair< std::string, std::string>( "864", "NoEvents") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "865", "EventType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "866", "EventDate") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "10442", "ExpectedFillType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "10455", "SecurityAltID") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16309", "ExchContractSymbol") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16451", "PriceDisplayType") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16452", "TickSize") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16454", "PointValue") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16456", "NumTickTblEntries") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16457", "NumTicks") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16458", "MaxPrice") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16461", "LotSize") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16552", "ExchTickSize") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16554", "ExchPointValue") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "16899", "MarginExcess") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "17000", "RequestTickTable") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "18000", "ForceLogout") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "18203", "ExchangeGateway") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "18206", "NoGateways") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "18207", "TTSecurityAlias") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "21020", "PresentValue") ) ;
  fixTags.insert ( std::pair< std::string, std::string>( "22000", "TransactionId") ) ;
}

#endif

#endif
